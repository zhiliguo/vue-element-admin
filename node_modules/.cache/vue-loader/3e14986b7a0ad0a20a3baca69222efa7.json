{"remainingRequest":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/src/views/table/drag-table.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/src/views/table/drag-table.vue","mtime":1662895890969},{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/css-loader/dist/cjs.js","mtime":1654691216654},{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1654691220694},{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/postcss-loader/src/index.js","mtime":1654691218091},{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":1654691214404},{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":1654691219061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtdGFibGUgLm9yZGVyRXhwaXJlZCB7CiAgYmFja2dyb3VuZDogZGFya3JlZDsKfQoKLmVsLXRhYmxlIC5hbG1vc3RFeHBpcmV7CiAgYmFja2dyb3VuZDogb3JhbmdlOwp9CgouZWwtdGFibGUgLm5ld09yZGVyIHsKICBiYWNrZ3JvdW5kOiBsaWdodGdyZWVuOwp9Cg=="},{"version":3,"sources":["drag-table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"drag-table.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <el-card class=\"box-card\">\n  <!-- <el-table\n    :data=\"tableData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))\"\n    style=\"width: 100%\"\n    :row-class-name=\"tableRowClassName\"> -->\n    <el-table-column\n      prop=\"OrderStart\"\n      label=\"Order Start/开始日期\"\n      width=\"220\">\n    </el-table-column>\n    <el-table-column\n      prop=\"OrderEnds\"\n      label=\"Order Ends/结束日期\"\n      width=\"220\">\n    </el-table-column>\n    <el-table-column\n      prop=\"ProjectName\"\n      label=\"Project Name/项目名称\"\n      width=\"220\">\n    </el-table-column>\n    <el-table-column\n      prop=\"ClientName\"\n      label=\"Client Name/客户名称\"\n      width=\"220\">\n    </el-table-column>\n    <el-table-column\n      prop=\"ClientAddress\"\n      label=\"Client Address/地址\"\n      width=\"220\">\n    </el-table-column>\n    <el-table-column\n      prop=\"InchargeName\"\n      label=\"Incharge Name/负责人\"\n      width=\"220\">\n    </el-table-column>\n    <el-table-column\n      prop=\"RequestAmount\"\n      label=\"Request Amount/请求金额\"\n      width=\"220\">\n    </el-table-column>\n    <el-table-column\n      prop=\"Comments\"\n      label=\"Comments/备注\"\n      width=\"220\">\n    </el-table-column>\n    <el-table-column\n          align=\"center\" width=\"220\">\n          <template slot=\"header\" slot-scope=\"scope\">\n            <el-input\n              v-model=\"search\"\n              size=\"mini\"\n              placeholder=\"输入关键字搜索\"/>\n            <el-button\n              size=\"mini\"\n              @click=\"add(scope.$index, scope.row)\">Add</el-button>\n          </template>\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              @click=\"handleEdit(scope.$index, scope.row)\">Edit</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              @click=\"handleDelete(scope.$index, scope.row)\">Delete</el-button>\n          </template>\n  <!-- </el-table-column> -->\n  </el-card>\n        <! -- pop up window -- >\n        <el-dialog :title=\"dialogTitle\" width=\"50%\" :visible.sync=\"iconFormVisible\">\n          <el-form :inline=\"true\" :model=\"userInfo\" class=\"demo-form-inline\">\n            <!-- <El form item label = \"name\">\n              <El input V-model = \"userinfo. Name\" placeholder = \"name\" ></El input>\n            </el-form-item>\n            <El form item label = \"date\">\n              <El input V-model = \"userinfo. Date\" placeholder = \"date\" ></El input>\n            </el-form-item>\n            <El form item label = \"address\">\n              <El input V-model = \"userinfo. Address\" placeholder = \"address\" ></El input>\n            </el-form-item>\n            <El form item label = \"age\">\n              <El input V-model = \"userinfo.Age\" placeholder = \"age\" ></El input>\n            </el-form-item> -->\n          </el-form>\n          <div slot=\"footer\" class=\"dialog-footer\">\n            <El button @Click = \"iconformvisible = false\">cancel</El button >\n            <El button type = \"primary\" @Click = \"submituser()\">OK</El button >\n          </div>\n        </el-dialog>\n  </el-table>\n</template>\n\n<script>\n  export default {\n    methods: {\n      tableRowClassName({row, rowIndex}) {\n        if (rowIndex === 1) {\n          return 'orderExpired';\n        } else if (rowIndex === 2) {\n          return 'almostExpire';\n        }else if (rowIndex === 3) {\n          return 'newOrder';\n        }\n        return '';\n      }\n    },\n    data() {\n      return {\n        iconFormVisible: false,\n        userInfo: {},\n        Dialogtitle: 'Add',\n        rowIndex: null,\n        tableData: [{\n          OrderStart: '2020-05-02',\n          OrderEnds: '2020-08-02',\n          ProjectName:'Miramed',\n          ClientName: 'HTKK',\n          ClientAddress: '東京六本木',\n          InchargeName: 'Daniel',\n          RequestAmount:  '¥200000',\n          Comments:'Normal'\n        }, {\n          OrderStart: '2020-05-02',\n          OrderEnds: '2020-08-02',\n          ProjectName:'Miramed',\n          ClientName: 'HTKK',\n          ClientAddress: '東京六本木',\n          InchargeName: 'Daniel',\n          RequestAmount:  '¥200000',\n          Comments:'Expired'\n        }, {\n          OrderStart: '2020-05-02',\n          OrderEnds: '2020-08-02',\n          ProjectName:'Miramed',\n          ClientName: 'HTKK',\n          ClientAddress: '東京六本木',\n          InchargeName: 'Daniel',\n          RequestAmount:  '¥200000',\n          Comments:'Almost Expired'\n        }, {\n          OrderStart: '2020-05-02',\n          OrderEnds: '2020-08-02',\n          ProjectName:'Miramed',\n          ClientName: 'HTKK',\n          ClientAddress: '東京六本木',\n          InchargeName: 'Daniel',\n          RequestAmount:  '¥200000',\n          Comments:'New Order'\n        }]\n      }\n    }\n  }\n</script>\n\n<style>\n  .el-table .orderExpired {\n    background: darkred;\n  }\n\n  .el-table .almostExpire{\n    background: orange;\n  }\n\n  .el-table .newOrder {\n    background: lightgreen;\n  }\n</style>\n<!-- <script>\nimport { fetchList } from '@/api/article'\nimport Sortable from 'sortablejs'\n\nexport default {\n  name: 'DragTable',\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    }\n  },\n  data() {\n    return {\n      list: null,\n      total: null,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      sortable: null,\n      oldList: [],\n      newList: []\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    async getList() {\n      this.listLoading = true\n      const { data } = await fetchList(this.listQuery)\n      this.list = data.items\n      this.total = data.total\n      this.listLoading = false\n      this.oldList = this.list.map(v => v.id)\n      this.newList = this.oldList.slice()\n      this.$nextTick(() => {\n        this.setSort()\n      })\n    },\n    setSort() {\n      const el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0]\n      this.sortable = Sortable.create(el, {\n        ghostClass: 'sortable-ghost', // Class name for the drop placeholder,\n        setData: function(dataTransfer) {\n          // to avoid Firefox bug\n          // Detail see : https://github.com/RubaXa/Sortable/issues/1012\n          dataTransfer.setData('Text', '')\n        },\n        onEnd: evt => {\n          const targetRow = this.list.splice(evt.oldIndex, 1)[0]\n          this.list.splice(evt.newIndex, 0, targetRow)\n\n          // for show the changes, you can delete in you code\n          const tempIndex = this.newList.splice(evt.oldIndex, 1)[0]\n          this.newList.splice(evt.newIndex, 0, tempIndex)\n        }\n      })\n    }\n  }\n}\n</script>\n\n<!-- <style>\n.sortable-ghost{\n  opacity: .8;\n  color: #fff!important;\n  background: #42b983!important;\n}\n</style>\n\n<style scoped>\n.icon-star{\n  margin-right:2px;\n}\n.drag-handler{\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n}\n.show-d{\n  margin-top: 15px;\n}\n</style> -->\n"]}]}