{"remainingRequest":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/src/views/table/drag-table.vue?vue&type=style&index=1&id=4b19cff0&scoped=true&lang=css&","dependencies":[{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/src/views/table/drag-table.vue","mtime":1658664439964},{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/css-loader/dist/cjs.js","mtime":1654691216654},{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1654691220694},{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/postcss-loader/src/index.js","mtime":1654691218091},{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/cache-loader/dist/cjs.js","mtime":1654691214404},{"path":"/Users/Daniel/Desktop/Development/VUE/VUE集成/vue-element-admin/node_modules/vue-loader/lib/index.js","mtime":1654691219061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmljb24tc3RhcnsKICBtYXJnaW4tcmlnaHQ6MnB4Owp9Ci5kcmFnLWhhbmRsZXJ7CiAgd2lkdGg6IDIwcHg7CiAgaGVpZ2h0OiAyMHB4OwogIGN1cnNvcjogcG9pbnRlcjsKfQouc2hvdy1kewogIG1hcmdpbi10b3A6IDE1cHg7Cn0K"},{"version":3,"sources":["drag-table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"drag-table.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- Note that row-key is necessary to get a correct row order. -->\n    <el-table\n        :data=\"tableData\"\n        style=\"width: 100%\"\n        :row-class-name=\"tableRowClassName\">\n        <el-table-column\n          prop=\"date\"\n          label=\"日期\"\n          width=\"180\">\n        </el-table-column>\n        <el-table-column\n          prop=\"name\"\n          label=\"姓名\"\n          width=\"180\">\n        </el-table-column>\n        <el-table-column\n          prop=\"address\"\n          label=\"地址\">\n        </el-table-column>\n      </el-table>\n</template>\n\n<script>\n  import Sortable from 'sortablejs'\n\n  export default {\n    methods: {\n      tableRowClassName({row, rowIndex}) {\n        if (rowIndex === 1) {\n          return 'warning-row';\n        } else if (rowIndex === 3) {\n          return 'success-row';\n        }\n        return '';\n      }\n    },\n    data() {\n      return {\n        tableData: [{\n          date: '2016-05-02',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄',\n        }, {\n          date: '2016-05-04',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄'\n        }, {\n          date: '2016-05-01',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄',\n        }, {\n          date: '2016-05-03',\n          name: '王小虎',\n          address: '上海市普陀区金沙江路 1518 弄'\n        }]\n      }\n    }\n  }\n</script>\n\n<!-- <script>\nimport { fetchList } from '@/api/article'\nimport Sortable from 'sortablejs'\n\nexport default {\n  name: 'DragTable',\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'info',\n        deleted: 'danger'\n      }\n      return statusMap[status]\n    }\n  },\n  data() {\n    return {\n      list: null,\n      total: null,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 10\n      },\n      sortable: null,\n      oldList: [],\n      newList: []\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    async getList() {\n      this.listLoading = true\n      const { data } = await fetchList(this.listQuery)\n      this.list = data.items\n      this.total = data.total\n      this.listLoading = false\n      this.oldList = this.list.map(v => v.id)\n      this.newList = this.oldList.slice()\n      this.$nextTick(() => {\n        this.setSort()\n      })\n    },\n    setSort() {\n      const el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0]\n      this.sortable = Sortable.create(el, {\n        ghostClass: 'sortable-ghost', // Class name for the drop placeholder,\n        setData: function(dataTransfer) {\n          // to avoid Firefox bug\n          // Detail see : https://github.com/RubaXa/Sortable/issues/1012\n          dataTransfer.setData('Text', '')\n        },\n        onEnd: evt => {\n          const targetRow = this.list.splice(evt.oldIndex, 1)[0]\n          this.list.splice(evt.newIndex, 0, targetRow)\n\n          // for show the changes, you can delete in you code\n          const tempIndex = this.newList.splice(evt.oldIndex, 1)[0]\n          this.newList.splice(evt.newIndex, 0, tempIndex)\n        }\n      })\n    }\n  }\n}\n</script> -->\n\n<style>\n.sortable-ghost{\n  opacity: .8;\n  color: #fff!important;\n  background: #42b983!important;\n}\n</style>\n\n\n<style scoped>\n.icon-star{\n  margin-right:2px;\n}\n.drag-handler{\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n}\n.show-d{\n  margin-top: 15px;\n}\n</style>\n"]}]}